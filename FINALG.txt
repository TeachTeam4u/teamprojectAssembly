.MODEL SMALL
.STACK 200H
.DATA

COUNT DW 0
COUNT1 DW 0
ADDRESS1 DW 0
ADDRESS DW 0
DL1 DW 0
C1 DW 0
TIK DW 0
TEMCOL DW 0
TEMROW DW 0
; MENU

V DW 200
	R DW 100
	Y DW 100
	F DW 200
	MSG12 DB 0AH,0AH,0AH,'              **************************************$'
	MSG14 DB 0AH,'              **            WELCOME TO THE GAME   **$'
	MSG15 DB 0AH,'              **            TIC TAC TOE           **$'
	MSG13 DB 0AH,'              **     LEVEL:1 PLAYER VS PLAYER     **$'
	MSG17 DB 0AH,'              **    LEVEL:2 PLAYER VS COMPUTER    **$'
	MSG10 DB 0AH,'              **************************************$'
	MSG DB 0AH,0AH,0AH,'                PRESS 1 TO START THE GAME $'
	MSG1 DB 0AH,'                PRESS 2 TO TERMINATE $'
;DRAW BLOCKS

ER DW 0
EC DW 0
T DB 0
ADRESS DW 0
ADRESS2 DW 0
ADRESS3 DW 0
STARTCOL DW 0
STARTROW DW 0
D1 DW 0
currY DW 0
currX DW 0
COUNT2 DB 0
COUNT3 DB 0
COUNT4 DB 0
TEMP DW 0

;CHECK
RO DW 0
R1 DW 0
A1 DW 0
ADRESS_CHECK DW 0
;CHECK COLOUR
ADDRESS_CHECK_COLOUR DW 0
;INPUT
AAX DW 0
ADDRESS_PLAY_GAME DW 0
ADDRESS_CHECKWHOLE DW 0
;color block
ADDRESS_COLOR_BLOCK DW 0
TURN DB 1
A DW 0
ZZ DW 0

.CODE
MAIN PROC
	MOV AX,@DATA
	MOV DS,AX
	
	MOV AH,0
	MOV AL,10H
	INT 10H
	
	MOV AH,0BH
	MOV BX,2
	INT 10H
	
	CALL DISPLAY 
	
	MOV AH,0CH
	MOV AL,8
	INT 10H
	
	CALL TIC_TAC_TOE
	
	MOV AH,0CH
	MOV AL,4
	INT 10H
	
	CALL THREE_D
	
	CALL MENU
	
	MOV AH,1
	INT 21H
	
	CALL DRAWBLOCKS
	
	MOV AH,1
	INT 21H
	
	CALL PLAY_GAME
	
	MOV AH,4CH
	INT 21H
	MAIN ENDP
;------------------------------------------------------------------------------------	
	DISPLAY PROC
	MOV AH,0CH		;----------VERTICAL LEFT BORDER
	MOV AL,9
	MOV CX,0    
	MOV DX,0    
	INT 10H
	
	MOV COUNT,20
LOOP1: 
	 MOV DX,0
	 MOV COUNT1,351
	 I_LOOP:
		INT 10H
		INC DX
		INT 10H
		DEC COUNT1 
		JNZ I_LOOP
	 INC CX
	 DEC COUNT
	 JNZ LOOP1
	 
	 MOV AH,0CH           ;----------VERTICAL RIGHT BORDER
	 MOV AL,9
	 MOV CX,620    
	 MOV DX,0    
	 INT 10H
	 MOV COUNT,20
E_LOOP1: 		
	 MOV DX,0
	 MOV COUNT1,351
	 I_LOOP1:
		INT 10H
		INC DX
		INT 10H
		DEC COUNT1 
		JNZ I_LOOP1
	 INC CX
	 DEC COUNT
	 JNZ E_LOOP1
	 
	 MOV AH,0CH			;----------HORIZONTAL LEFT BORDER
	 MOV AL,6
	 MOV CX,19    
	 MOV DX,0    
	 INT 10H
	 MOV COUNT,20
E_LOOP12: 				
	 MOV CX,20
	 MOV COUNT1,599
	 I_LOOP12:
		INT 10H
		INC CX
		INT 10H
		DEC COUNT1 
		JNZ I_LOOP12
	 INC DX
	 DEC COUNT
	 JNZ E_LOOP12
	 
	 MOV AH,0CH				;----------HORIZONTAL RIGHT BORDER
	 MOV AL,6
	 MOV CX,19    
	 MOV DX,330    
	 INT 10H
	 MOV COUNT,20
E1_LOOP12: 
	 MOV CX,19
	 MOV COUNT1,600
	 I1_LOOP12:
		INT 10H
		INC CX
		INT 10H
		DEC COUNT1 
		JNZ I1_LOOP12
	 INC DX
	 DEC COUNT
	 JNZ E1_LOOP12
	 RET
	 DISPLAY ENDP
	
TIC_TAC_TOE PROC
	POP ADDRESS1
	MOV AH,0CH
	MOV AL,8
	INT 10H
	
	CALL TIC
	
	CALL DELAY
	
	MOV AH,0CH
	MOV AL,9
	INT 10H
	
	CALL TAC
	
	CALL DELAY
	
	MOV AH,0CH
	MOV AL,12
	INT 10H
	
	CALL TOE
	
	CALL DELAY
	
	PUSH ADDRESS1
	RET
	TIC_TAC_TOE ENDP
	
TIC PROC 					;------------T I C----------- 
	POP ADDRESS
	
	MOV CX,40			;STARTING OF T.
	MOV DX,60
	INT 10H
	MOV COUNT,60
LOOPA:
	MOV COUNT1,15
	MOV DX,60
	LOOPB:
	INC DX
	INT 10H
	DEC COUNT1
	JNZ LOOPB
	INC CX
	DEC COUNT
	JNZ LOOPA
	
	MOV CX,65
	MOV DX,75
	MOV COUNT,10
LOOPAA:
	MOV COUNT1,40
	MOV DX,75
	LOOPBB:
	INC DX
	INT 10H
	DEC COUNT1
	JNZ LOOPBB
	INC CX
	DEC COUNT
	JNZ LOOPAA   ;ENDING OF T.

;------------------------------------------	
	
	MOV CX,120	; STARTING OF I.
	MOV DX,60
	MOV COUNT,30
LOOPAAA:			
	MOV COUNT1,15
	MOV DX,60
	LOOPBBB:
	INC DX
	INT 10H
	DEC COUNT1
	JNZ LOOPBBB
	INC CX
	DEC COUNT
	JNZ LOOPAAA   
	
	
	MOV CX,130
	MOV DX,75
	MOV COUNT,10
LOOPAAAA:
	MOV COUNT1,30
	MOV DX,75
	LOOPBBBB:
	INC DX
	INT 10H
	DEC COUNT1
	JNZ LOOPBBBB
	INC CX
	DEC COUNT
	JNZ LOOPAAAA   
	
	MOV CX,120
	MOV DX,105
	MOV COUNT,30
LOOPAAA5:			; ENDING OF I.
	MOV COUNT1,10
	MOV DX,105
	LOOPBBB5:
	INC DX
	INT 10H
	DEC COUNT1
	JNZ LOOPBBB5
	INC CX
	DEC COUNT
	JNZ LOOPAAA5  ;//////////////////  I IS COMPLETED.\\\\\\\\\\\\\\\\ 
	
;-----------------------------------------------
			;STARTING OF C
	MOV CX,175               ;UPPER SIDE OF C.
	MOV DX,60
	MOV COUNT,10
	INT 10H
LOOP_OF_C:
	MOV CX,175
	MOV COUNT1,30
	LOOP_OF_C_UPPER:
	INC CX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_C_UPPER
	INC DX
	DEC COUNT
	JNZ LOOP_OF_C
	
	MOV CX,175                ;LOWER SIDE OF C
	MOV DX,105
	MOV COUNT,10
	INT 10H
LOOP_OF_C2:
	MOV CX,175
	MOV COUNT1,30
	LOOP_OF_C_LOWER:
	INC CX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_C_LOWER
	INC DX
	DEC COUNT
	JNZ LOOP_OF_C2
	
	MOV CX,165				;CENTER PART OF C.
	MOV DX,70
	MOV COUNT,10
	INT 10H
LOOP_OF_C_CENTER:
	MOV DX,70
	MOV COUNT1,35
	LOOP_OF_C_CENTER_INNER:
	INC DX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_C_CENTER_INNER
	INC CX
	DEC COUNT
	JNZ LOOP_OF_C_CENTER	;////////////   C IS COMPLETED \\\\\\\\\\\
;----------------------------------------------------
	PUSH ADDRESS
	RET
	TIC ENDP

TAC PROC					;------------T A C----------- 
	POP ADDRESS
	
	MOV CX,215			;STARTING OF T.
	MOV DX,60
	INT 10H
	MOV COUNT,60		
LOOP_OF_T:
	MOV COUNT1,15
	MOV DX,60
	LOOP_OF_T_INNER:
	INC DX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_T_INNER
	INC CX
	DEC COUNT
	JNZ LOOP_OF_T
	
	MOV CX,240
	MOV DX,75
	MOV COUNT,10
LOOP_OF_T2:
	MOV COUNT1,40
	MOV DX,75
	LOOP_OF_T2_INNER:
	INC DX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_T2_INNER
	INC CX
	DEC COUNT
	JNZ LOOP_OF_T2   ;ENDING OF T.

;------------------------------------------	

	MOV CX,300;200	;STRATING OF A.
	MOV DX,60
	MOV BX,60
	MOV COUNT,10;WIDHTH
	INT 10H
LOOP_OF_A:
	;DOWNWARD LENGTH.
	MOV CX,300
	MOV DX,BX
	INC BX
	MOV COUNT1,15
	LOOP_OF_AI:
	
	DEC CX
	INC DX
	INT 10H
	
	DEC COUNT1
	JNZ LOOP_OF_AI
	
	DEC COUNT
	JNZ LOOP_OF_A

	MOV CX,280
	MOV DX,85
	INT 10H
	MOV COUNT1,30
L:
	MOV COUNT,12
	MOV CX,280
L2:
	INC CX
	INT 10H
	DEC COUNT
	JNZ L2
	INC DX
	DEC COUNT1
	JNZ L			; ENDING OF ONE LEFTSIDE OF A.
	

	MOV CX,300			  ;STRATING OF RIGHT SIDE A.
	MOV DX,60
	MOV BX,60
	MOV COUNT,10		  ;WIDHTH
	INT 10H
LOOP_OF_A_RIGHT:          ;DOWNWARD LENGTH.
	MOV CX,300
	MOV DX,BX
	INC BX
	MOV COUNT1,15
	LOOP_OF_AI_RIGHT:
	
	INC CX
	INC DX
	INT 10H
	
	DEC COUNT1
	JNZ LOOP_OF_AI_RIGHT
	
	DEC COUNT
	JNZ LOOP_OF_A_RIGHT

	MOV CX,310
	MOV DX,85
	INT 10H
	MOV COUNT1,30
L_RIGHT:
	MOV COUNT,12
	MOV CX,310
L2_RIGHT:
	INC CX
	INT 10H
	DEC COUNT
	JNZ L2_RIGHT
	INC DX
	DEC COUNT1
	JNZ L_RIGHT			; ENDING OF ONE RIGHT SIDE OF A.	
	
	MOV CX,192	; CENTER OF A.
	MOV DX,85
	INT 10H
	MOV COUNT,10;ANDAZAN
LOOP_OF_A_INSIDE_OUTER:
	MOV CX,292
	MOV COUNT1,18 ;DISTANCE BETWEEN TWO LINES.
LOOP_OF_A_INSIDE_INNER:
	INC CX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_A_INSIDE_INNER
	INC DX
	DEC COUNT
	JNZ LOOP_OF_A_INSIDE_OUTER	;///////////////////////      A     COMPLETED.\\\\\\\\\\\\\\\\\
	
;-----------------------------------------------
														;STARTING OF C
	MOV CX,340               ;UPPER SIDE OF C
	MOV DX,60
	MOV COUNT,10
	INT 10H
LOOP_OF_C_OTHER:
	MOV CX,340
	MOV COUNT1,30
	LOOP_OF_C_UPPER_OTHER:
	INC CX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_C_UPPER_OTHER
	INC DX
	DEC COUNT
	JNZ LOOP_OF_C_OTHER
	
	MOV CX,340                ;LOWER SIDE OF C.
	MOV DX,105
	MOV COUNT,10
	INT 10H
LOOP_OF_C2_OTHER:
	MOV CX,340
	MOV COUNT1,30
	LOOP_OF_C_LOWER_OTHER:
	INC CX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_C_LOWER_OTHER
	INC DX
	DEC COUNT
	JNZ LOOP_OF_C2_OTHER
	
	MOV CX,330				;CENTER PART OF C.
	MOV DX,70
	MOV COUNT,10
	INT 10H
LOOP_OF_C_CENTER_OTHER:
	MOV DX,70
	MOV COUNT1,35
	LOOP_OF_C_CENTER_INNER_OTHER:
	INC DX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_C_CENTER_INNER_OTHER
	INC CX
	DEC COUNT
	JNZ LOOP_OF_C_CENTER_OTHER	;////////////   C IS COMPLETED \\\\\\\\\\\
;----------------------------------------------------
	PUSH ADDRESS
	RET
	TAC ENDP
	
TOE PROC					;------------T O E----------- 
	POP ADDRESS
	
	;----------------------------------------------------
	
	MOV CX,390			;STARTING OF T.
	MOV DX,60
	INT 10H
	MOV COUNT,60		
LOOP_OF_T_B:
	MOV COUNT1,15
	MOV DX,60
	LOOP_OF_T_INNER_B:
	INC DX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_T_INNER_B
	INC CX
	DEC COUNT
	JNZ LOOP_OF_T_B
	
	MOV CX,415
	MOV DX,75
	MOV COUNT,10
LOOP_OF_T2_B:
	MOV COUNT1,40
	MOV DX,75
	LOOP_OF_T2_INNER_B:
	INC DX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_T2_INNER_B
	INC CX
	DEC COUNT
	JNZ LOOP_OF_T2_B   ;ENDING OF T.

;------------------------------------------	

	MOV CX,480			;STARTING OF O.
	MOV DX,60
	INT 10H
	MOV COUNT,30
LOOP_OF_O:				;UPPER
	MOV DX,60
	MOV COUNT1,10
	LOOP_OF_O_INNER:
	INC DX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_O_INNER
	INC CX
	DEC COUNT
	JNZ LOOP_OF_O
	
	MOV CX,480			;LOWER
	MOV DX,105
	INT 10H
	MOV COUNT,30
LOOP_OF_O_LOWER:				
	MOV DX,105
	MOV COUNT1,10
	LOOP_OF_O_INNER_LOWER:
	INC DX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_O_INNER_LOWER
	INC CX
	DEC COUNT
	JNZ LOOP_OF_O_LOWER
	
	MOV CX,470				;CENTER PART OF O.
	MOV DX,70
	MOV COUNT,10
	INT 10H
LOOP_OF_O_CENTER_OTHER:
	MOV DX,70
	MOV COUNT1,35
	LOOP_OF_O_CENTER_INNER_OTHER:
	INC DX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_O_CENTER_INNER_OTHER
	INC CX
	DEC COUNT
	JNZ LOOP_OF_O_CENTER_OTHER	
	
	MOV CX,510				;CENTER PART 2 OF O.
	MOV DX,70
	MOV COUNT,10
	INT 10H
LOOP_OF_O_CENTER:
	MOV DX,70
	MOV COUNT1,35
	LOOP_OF_O_CENTER_INNER:
	INC DX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_O_CENTER_INNER
	INC CX
	DEC COUNT
	JNZ LOOP_OF_O_CENTER	
							; /////////////  O IS COMPLETED. \\\\\\\\\\\\\\\	
;--------------------------------------------
	
	MOV CX,535		;STRAT OF E.
	MOV DX,60
	;INT 10H
	MOV COUNT,10
LOOP_OF_E:
	MOV COUNT1,31
	MOV CX,535
	LOOP_OF_E_INNER:
	INC CX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_E_INNER
	INC DX
	DEC COUNT
	JNZ LOOP_OF_E
	
	MOV CX,535 		;DOWN WARD LINE OF E.
	MOV DX,69
	;INT 10H
	MOV COUNT,10
LOOP_OF_E2:
	MOV COUNT1,46
	INC CX
	MOV DX,69
	LOOP_OF_E2_INNER:
	INC DX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_E2_INNER
	DEC COUNT
	JNZ LOOP_OF_E2
	
	MOV CX,536			; CENTER HORIZONTAL LINE OF E.
	MOV DX,82
	;INT 10H
	MOV COUNT,10
LOOP_OF_E_CENTER:
	MOV COUNT1,30
	MOV CX,536
	INC DX
	LOOP_OF_E_CENTER_INNER:
	INC CX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_E_CENTER_INNER
	DEC COUNT
	JNZ LOOP_OF_E_CENTER

	MOV CX,535			; END HORIZONTAL LINE OF E.
	MOV DX,105
	MOV COUNT,12
LOOP_OF_E_LOWER:
	MOV COUNT1,31
	MOV CX,535
	LOOP_OF_E_LOWER_INNER:
	INC CX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_E_LOWER_INNER
	INC DX
	DEC COUNT
	JNZ LOOP_OF_E_LOWER ;/////////////////////  END OF E. \\\\\\\\\\\\\\\
;--------------------------------------------------------------------	
	PUSH ADDRESS
	RET
	TOE ENDP

THREE_D PROC			;--------------THREE_D FUNCTION-----------
	POP ADDRESS	
	;STARTING OF C
	;UPPER SIDE HORIZONTAL OF 3
	
	MOV CX,225		;START OF 3.
	MOV DX,140
	MOV COUNT,10
	;INT 10H
LOOP_OF_3_OTHER:
	MOV CX,225
	MOV COUNT1,40
	LOOP_OF_3_UPPER_OTHER:
	INC CX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_3_UPPER_OTHER
	INC DX
	DEC COUNT
	JNZ LOOP_OF_3_OTHER
	
	MOV CX,225                ;MIDDLE HORIZONTAL OF 3.
	MOV DX,200
	MOV COUNT,10
	;INT 10H
LOOP_OF_3_2_OTHER:
	MOV CX,225
	MOV COUNT1,40
	LOOP_OF_3_LOWER_OTHER:
	INC CX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_3_LOWER_OTHER
	INC DX
	DEC COUNT
	JNZ LOOP_OF_3_2_OTHER
	
    MOV CX,265					;CENTER PART OF 3.
    MOV DX,150
    MOV COUNT,10
    INT 10H
LOOP_OF_3_CENTER_OTHER:
    MOV DX,150
    MOV COUNT1,50
    LOOP_OF_3_CENTER_INNER_OTHER:
    INC DX
    INT 10H
    DEC COUNT1
    JNZ LOOP_OF_3_CENTER_INNER_OTHER
    INC CX
    DEC COUNT
    JNZ LOOP_OF_3_CENTER_OTHER
    
	MOV CX,225					;LAST HORIZONTAL LINE OF 3.
	MOV DX,260
	MOV COUNT,10
LOOP_OF_3_3:
	MOV COUNT1,40
	MOV CX,225
	LOOP_OF_3_3_INNER:
	INC CX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_3_3_INNER
	INC DX
	DEC COUNT
	JNZ LOOP_OF_3_3
	
	MOV CX,255			; 2ND VERTICAL OF 3.
	MOV DX,210
	MOV COUNT,50
LOOP_OF_3_3_1:
	MOV COUNT1,10
	MOV CX,265
	LOOP_OF_3_3_1_INNER:
	INC CX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_3_3_1_INNER	
	INC DX
	DEC COUNT
	JNZ LOOP_OF_3_3_1
	;---------------------------------   3    IS COMPLETED. -------------
;--------------------------------------------------------
	
	MOV CX,305    						;D IS STARTED
	MOV DX,140
	MOV COUNT,115
LOOP_OF_D:
	MOV COUNT1,10
	MOV CX,305
	LOOP_OF_D_INNER:
	INC CX
	INT 10H
	DEC COUNT1
	JNZ LOOP_OF_D_INNER
	INC DX
	DEC COUNT
	JNZ LOOP_OF_D
	
	MOV CX,314
	MOV DX,139
	MOV COUNT,40
LOOP_HORIZONTAL_D:						;HORIZONTAL OF D IS COMPLETED.
	MOV COUNT1,10
	MOV DX,139
	LOOP_HORIZONTAL_D_INNER:
	INC DX
	INT 10H
	DEC COUNT1
	JNZ LOOP_HORIZONTAL_D_INNER
	INC CX
	DEC COUNT
	JNZ LOOP_HORIZONTAL_D
	
	MOV CX,353
	MOV DX,139
	MOV TEMCOL,CX
	MOV TEMROW,DX
	MOV COUNT,10
LOOP_HORIZONTAL_D_CURVE:						;UPPER CURVE IS DONE.
	MOV COUNT1,10
	LOOP_HORIZONTAL_D_CURVE_INNER:
	ADD DX,2
	INC CX
	INT 10H
	DEC COUNT1
	JNZ LOOP_HORIZONTAL_D_CURVE_INNER
	INC TEMROW
	MOV CX,TEMCOL
	MOV DX,TEMROW
	DEC COUNT
	JNZ LOOP_HORIZONTAL_D_CURVE
	
	MOV CX,363
	MOV DX,149
	MOV COUNT,10
LOOP_MIDDLE_D:
	MOV COUNT1,30
	MOV DX,149
	LOOP_MIDDLE_D_INNER:
	INC DX
	INT 10H
	DEC COUNT1
	JNZ LOOP_MIDDLE_D_INNER
	INC CX
	DEC COUNT
	JNZ LOOP_MIDDLE_D
	PUSH ADDRESS
	RET
	THREE_D ENDP	
	
DELAY PROC				;-------------DELAY FUNCTION-----------
	MOV AX,00H
	INT 1AH
	MOV TIK,DX
	ADD TIK,5H
	DELY:
		MOV AX,00H
		INT 1AH
		CMP TIK,DX
		JGE DELY
		RET 
		DELAY ENDP
;--------------------------------------------------------------------------------	
MENU PROC
	POP ADDRESS
	MOV AX,@DATA
	MOV DS,AX
	
	MOV AH,0H
	MOV AL,10H
	INT 10H
	MOV AH,0BH
	MOV BX,9
	INT 10H
	MOV AH,9
	LEA DX,MSG12
	INT 21H
	LEA DX,MSG14
	INT 21H
	LEA DX,MSG15
	INT 21H
	LEA DX,MSG13
	INT 21H
	LEA DX,MSG17
	INT 21H
	LEA DX,MSG10
	INT 21H
	PUSH ADDRESS
	RET
	MENU ENDP
	
;----------------------------------------------------------------------------------
	
DRAWBLOCKS PROC
	
	POP ADRESS2
	
	MOV AH,0
	MOV AL,10H
	INT 10H
	
	MOV AH,0BH
	MOV BX,0
	INT 10H
	
	MOV AX,200
	MOV BX,15
	PUSH AX
	PUSH BX
	CALL DRAWBLOCK1
	
	MOV AX,200
	PUSH AX
	MOV BX,118
	PUSH BX
	CALL DRAWBLOCK2
	
	MOV AX,200
	PUSH AX
	MOV BX,221
	PUSH BX
	CALL DRAWBLOCK3
	
	PUSH ADRESS2
	RET
	
	DRAWBLOCKS ENDP
	
DRAWBLOCK1 PROC
	POP ADRESS
	POP STARTROW
	POP STARTCOL
	
	MOV AH,0CH
	MOV AL,13
	MOV CX,STARTCOL    ;200
	MOV DX,STARTROW    ;30
	INT 10H
	MOV COUNT,230
	LOOPP:
		INC CX ;--------->
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPP
	SUB CX,231
	MOV COUNT,93;   /
	LOOPP2:		 ;	/
		INC DX	 ; /
		DEC CX
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPP2
	MOV COUNT,231
	LOOPP3:
		INC CX;--------->
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPP3
	MOV COUNT,93
	LOOPP4:
		INC CX;UPWARD LINE
		DEC DX
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPP4
		
	MOV CX,STARTCOL
	MOV DX,STARTROW
	ADD CX,77
	MOV COUNT,93
	LOOPPP:
		DEC CX
		INC DX
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPPP
	MOV CX,STARTCOL
	MOV DX,STARTROW
	ADD CX,154        ;MOV CX,354
	MOV COUNT,93
	MOV DX,STARTROW
	LOOPPP2:
		DEC CX
		INC DX
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPPP2
	MOV CX,STARTCOL
	MOV DX,STARTROW
	SUB CX,33       ;MOV CX,167
	ADD DX,31       ;MOV DX,63
	MOV COUNT,230
	LOOPPPP:
		INC CX
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPPPP
	MOV CX,STARTCOL  ;MOV CX,134
	MOV DX,STARTROW   ;MOV DX,96
	SUB CX,66
	ADD DX,62
	MOV COUNT,230
	LOOPPPP2:
		INC CX
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPPPP2
	PUSH ADRESS
	RET
	DRAWBLOCK1 ENDP
	
DRAWBLOCK2 PROC
	POP ADRESS
	POP STARTROW
	POP STARTCOL
	
	MOV AH,0CH
	MOV AL,14
	MOV CX,STARTCOL    ;200
	MOV DX,STARTROW    ;30
	INT 10H
	MOV COUNT,230
	LOOPP:
		INC CX ;--------->
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPP
	SUB CX,231
	MOV COUNT,93;   /
	LOOPP2:		 ;	/
		INC DX	 ; /
		DEC CX
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPP2
	MOV COUNT,231
	LOOPP3:
		INC CX;--------->
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPP3
	MOV COUNT,93
	LOOPP4:
		INC CX;UPWARD LINE
		DEC DX
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPP4
		
	MOV CX,STARTCOL
	MOV DX,STARTROW
	ADD CX,77
	MOV COUNT,93
	LOOPPP:
		DEC CX
		INC DX
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPPP
	MOV CX,STARTCOL
	MOV DX,STARTROW
	ADD CX,154        ;MOV CX,354
	MOV COUNT,93
	MOV DX,STARTROW
	LOOPPP2:
		DEC CX
		INC DX
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPPP2
	MOV CX,STARTCOL
	MOV DX,STARTROW
	SUB CX,33       ;MOV CX,167
	ADD DX,31       ;MOV DX,63
	MOV COUNT,230
	LOOPPPP:
		INC CX
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPPPP
	MOV CX,STARTCOL  ;MOV CX,134
	MOV DX,STARTROW   ;MOV DX,96
	SUB CX,66
	ADD DX,62
	MOV COUNT,230
	LOOPPPP2:
		INC CX
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPPPP2
	PUSH ADRESS
	RET
	DRAWBLOCK2 ENDP
	
DRAWBLOCK3 PROC
	POP ADRESS
	POP STARTROW
	POP STARTCOL
	
	MOV AH,0CH
	MOV AL,11
	MOV CX,STARTCOL    ;200
	MOV DX,STARTROW    ;30
	INT 10H
	MOV COUNT,230
	LOOPP:
		INC CX ;--------->
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPP
	SUB CX,231
	MOV COUNT,93;   /
	LOOPP2:		 ;	/
		INC DX	 ; /
		DEC CX
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPP2
	MOV COUNT,231
	LOOPP3:
		INC CX;--------->
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPP3
	MOV COUNT,93
	LOOPP4:
		INC CX;UPWARD LINE
		DEC DX
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPP4
		
	MOV CX,STARTCOL
	MOV DX,STARTROW
	ADD CX,77
	MOV COUNT,93
	LOOPPP:
		DEC CX
		INC DX
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPPP
	MOV CX,STARTCOL
	MOV DX,STARTROW
	ADD CX,154        ;MOV CX,354
	MOV COUNT,93
	MOV DX,STARTROW
	LOOPPP2:
		DEC CX
		INC DX
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPPP2
	MOV CX,STARTCOL
	MOV DX,STARTROW
	SUB CX,33       ;MOV CX,167
	ADD DX,31       ;MOV DX,63
	MOV COUNT,230
	LOOPPPP:
		INC CX
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPPPP
	MOV CX,STARTCOL  ;MOV CX,134
	MOV DX,STARTROW   ;MOV DX,96
	SUB CX,66
	ADD DX,62
	MOV COUNT,230
	LOOPPPP2:
		INC CX
		INT 10H
		DEC COUNT
		CMP COUNT,0
		JNE LOOPPPP2
	PUSH ADRESS
	RET
	DRAWBLOCK3 ENDP	
;----------------------------------------------------------------------------	

PLAY_GAME PROC
	MOV AX,@DATA
	MOV DS,AX
	POP ADDRESS_PLAY_GAME
	
;	MOV CH, 32
;	MOV AH, 1
;	INT 10h
	
	MOV AX,0001H
	INT 33H
L_INPUT:
	getPointerLocation:
	MOV AX,0003H
	INT 33H
	MOV currX, CX
	MOV currY, DX
	CMP BX, 1
	JZ chk_bounds
	JNZ getPointerLocation
	chk_bounds:
	
	CALL CHECKWHOLE
	POP ZZ
	CMP ZZ,0
	JE L_INPUT
	MOV AAX,AX
	MOV CX,AAX
	MOV DX,RO
	
	CALL CHECK_COLOUR
	POP ZZ
	CMP ZZ,0
	JE L_INPUT
	
	MOV CX,AAX
	MOV DX,RO
	
	CALL COLOR_BLOCK
	JMP L_INPUT
	
	PUSH ADDRESS_PLAY_GAME
	
	PLAY_GAME ENDP

CHECKWHOLE PROC;CHECKING THE CLICK AND RETURNING THE BOX
POP ADDRESS_CHECKWHOLE
;MOV CX,120;VALUE OF POINTER HARDCODED
;MOV DX,192;VALUE OF POINTER HARDCODED

B1:
MOV RO,15
MOV AX,200
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B2
POP CX
POP DX
JMP EB

B2:
MOV RO,15
MOV AX,277
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B3
POP CX
POP DX
JMP EB

B3:
MOV RO,15
MOV AX,354
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B4
POP CX
POP DX
JMP EB

B4:
MOV RO,46
MOV AX,169
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B5
POP CX
POP DX
JMP EB

B5:
MOV RO,46
MOV AX,246
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B6
POP CX
POP DX
JMP EB

B6:
MOV RO,46
MOV AX,323
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B7
POP CX
POP DX
JMP EB

B7:
MOV RO,77
MOV AX,138
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B8
POP CX
POP DX
JMP EB

B8:
MOV RO,77
MOV AX,215
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B9
POP CX
POP DX
JMP EB

B9:
MOV RO,77
MOV AX,292
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B10
POP CX
POP DX
JMP EB

B10:
MOV RO,118
MOV AX,200
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B11
POP CX
POP DX
JMP EB

B11:
MOV RO,118
MOV AX,277
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B12
POP CX
POP DX
JMP EB

B12:
MOV RO,118
MOV AX,354
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B13
POP CX
POP DX
JMP EB

B13:
MOV RO,149
MOV AX,169
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B14
POP CX
POP DX
JMP EB

B14:
MOV RO,149
MOV AX,246
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B15
POP CX
POP DX
JMP EB

B15:
MOV RO,149
MOV AX,323
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B16
POP CX
POP DX
JMP EB

B16:
MOV RO,180
MOV AX,138
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B17
POP CX
POP DX
JMP EB

B17:
MOV RO,180
MOV AX,215
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B18
POP CX
POP DX
JMP EB

B18:
MOV RO,180
MOV AX,292
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B19
POP CX
POP DX
JMP EB

B19:
MOV RO,221
MOV AX,200
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B20
POP CX
POP DX
JMP EB

B20:
MOV RO,221
MOV AX,227
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B21
POP CX
POP DX
JMP EB

B21:
MOV RO,221
MOV AX,354
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B22
POP CX
POP DX
JMP EB

B22:
MOV RO,252
MOV AX,169
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B23
POP CX
POP DX
JMP EB

B23:
MOV RO,252
MOV AX,246
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B24
POP CX
POP DX
JMP EB

B24:
MOV RO,252
MOV AX,323
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B25
POP CX
POP DX
JMP EB

B25:
MOV RO,283
MOV AX,138
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B26
POP CX
POP DX
JMP EB

B26:
MOV RO,283
MOV AX,215
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE B27
POP CX
POP DX
JMP EB

B27:
MOV RO,283
MOV AX,292
PUSH RO
PUSH AX
CALL CHECKBOX
POP BX
CMP BX,0
JE N
POP CX
POP DX
JMP EB

N:
MOV DL,BL
MOV DH,0
PUSH DX
JMP EA
EB:
;AX HAS THE COLUMN NO ANS RO HAS THE ROW NO.
MOV DL,BL
MOV DH,0
PUSH DX
EA:
PUSH ADDRESS_CHECKWHOLE
RET
CHECKWHOLE ENDP

CHECKBOX PROC
POP ADRESS_CHECK

POP AX										;getting value of column of starting poin of box
POP RO										;getting value of row of --------------------

; MOV STARTCOL,CL								;moving column of cursor point
; MOV STARTROW,DL								;moving row---------------
MOV BX,RO
MOV R1,BX									;moving row into new variable so that original value remain to return
MOV A1,AX									;moving column-------------------------------------------------------
MOV COUNT2,31								;for row
MOV COUNT,77								;for column
INC A1										;i have to write dec in loop
DEC R1										;i have to inc it in loop
L1:
	DEC COUNT2								;count of row
	JZ E3									;if row has been finished and don't find any match it definately does not accur in this box
	DEC A1									;if not found in a row then it has to shift on second row and for next row column is shifted to left so it is dec
	INC R1
	CMP R1,DX
	JNE L1
L4:
	CMP A1,CX
	JE E4
	INC A1
	DEC COUNT
	JNZ L4
E3:
	MOV BX,0								;returning 0 shows not found
	PUSH BX
	PUSH ADRESS_CHECK
	RET
	JMP W
E4:
	MOV BX,1								;returning 1 shows found
	PUSH BX
	PUSH ADRESS_CHECK
	RET
W:	
CHECKBOX ENDP

CHECK_COLOUR PROC
	MOV AX,@DATA
	MOV DS,AX
	POP ADDRESS_CHECK_COLOUR
	
	MOV TEMCOL,CX
	MOV TEMROW,DX
	ADD CX,50
	ADD DX,15
	MOV AH,0DH
	INT 10H
	CMP AL,0
	JNE NOT_EQUAL
	MOV CX,TEMCOL
	MOV DX,TEMROW
	MOV BX,1
	PUSH BX
	JMP CHECK_COLOUR_EXIT
	NOT_EQUAL:
	MOV CX,TEMCOL
	MOV DX,TEMROW
	MOV BX,0
	PUSH BX
	CHECK_COLOUR_EXIT:
	PUSH ADDRESS_CHECK_COLOUR
	RET
	CHECK_COLOUR ENDP
	
COLOR_BLOCK PROC
	POP ADDRESS_COLOR_BLOCK
	MOV A,CX
	CMP TURN,1
	JE RED
	CMP TURN,2
	JE GREEN
	RED:
		MOV AH,0CH
		MOV AL,4
		INT 10H
		MOV COUNT1,25
	LOOP1:
		MOV COUNT,76
		MOV  CX,A
		LOOP2:
			INC CX
			INT 10H
			DEC COUNT
			JNZ LOOP2
		INC DX	
		DEC A
		DEC COUNT1
		JNZ LOOP1
		JMP END1
		
	GREEN:
		MOV AH,0CH
		MOV AL,2
		INT 10H
		MOV COUNT1,25
	LOOP12:
		MOV COUNT,76
		MOV  CX,A
		LOOP21:
			INC CX
			INT 10H
			DEC COUNT
			JNZ LOOP21
		INC DX	
		DEC A
		DEC COUNT1
		JNZ LOOP12
	END1:
	CMP TURN,1
	JE TURN2
	MOV TURN,1
	JMP END2
	TURN2:
		MOV TURN,2
	END2:
	PUSH ADDRESS_COLOR_BLOCK
	RET
	COLOR_BLOCK ENDP


	
END MAIN
